
====================
Worldbuild Design
====================

Last updated 14-Jun-2016


This document is a scratch pad area for design notes during the development of Worldbuild

.. contents::



Design Overview 
---------------


As areas are completed, the contents will be copied to a users manual

*tags for progress are*

[unresolved]  = not sure how to do this

[in progress] = work may have started but early stages

[testing]     = key parts developed, testing results

[completed]   = tests passed and contents copied to users manual / ext paper




Key Concepts
``````````````


Map Annotation
====================================
The JPG image of the map has coordinates entered as a ration of width and height, rather than pixels otherwise resizing images will lose the reference points.

Loads a scanned map (or autogenerated) and allows you to label multiple layers - you can print this with as many or few layers as you like.

e.g. using the brush, mark the regions (land / sea / forest) - there are tools that can auto highlight but these can be turned off.
You then have a boundary layer, where you use a brush to paint what lands have borders and what they are

You then mark the towns and give them names and add details

etc...

All the data is saved as text in json and rst


Terrain Generation
====================================

Random Generation (in progress)
---------------------------------------------------------
Use planet.py to create a random planet
Should also allow modifying and saving to proper data format with layers for plants, etc

World builder should start EXTREMELY simple (eg - what is the name of your world) and get as complex as YOU want - no forced templates, but have tweakable parameters.


Scan from picture
---------------------------------------------------------
Takes an image of a scanned map and extracts the content into multiple layers based on image clustering like hills and trees.  Users can tweak how it converts.

You scan in your image and this is the base layer, then you can annotate your map with many layers

Free form (not to be implemented - better to import from Tile format)
-----------------------------------------------------------------------

UPDATE = use Tile format (https://github.com/bjorn/tiled 

You can draw lines and place down land / vegetation etc in a gui (best if it is javascript rather than TKinter).
Note that this is generally a POOR option (and disliked by many), though it is handy for quickly creating a rough draft map for path finding


Object builder
---------------------------------------------------------
- start simple with a name and some stats and can them flesh out details with images icons for map right up to 3d blender models or sgi cad models.

Creature Builder
---------------------------------------------------------
specify creatures 
simple = rogue specs + icon for moving on 2d map
complex = armour and weapon tables like wow - basic image
path finding - send AIâ€™s around your world to map paths


Implementation Notes
===============================================

- uses AIKIF for data storage
- generates linked static html files (new project?) or flask
- uses rawdata for random data generation
- uses vais for planet generation and simulation

Terrain Data structures
--------------------------
How much resolution do you need - do you want ultimate like Wow, or simple like grd. Best is a vector to allow zooming in or out, but may be tricky

Terrain is saved as matrix of layers
land_type = rock, sand, soil, water
elevation = how high is it


